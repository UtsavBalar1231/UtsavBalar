---
import Layout from "../layouts/Layout.astro";

const education = [
  {
    degree: "Master's in Computer Science and Engineering",
    institution: "National Institute of Technology, Meghalaya",
    location: "IN",
    period: "Expected Jun 2026",
    current: true,
  },
  {
    degree: "Bachelor's in Computer Engineering",
    institution: "UKA Tarsadia University, Gujarat",
    location: "IN",
    period: "2019 - 2023",
    current: false,
  },
];

const interests = [
  "Open-source development",
  "Low-level engineering",
  "Embedded systems",
  "Reading webtoons and manhwas",
  "Watching movies and TV shows",
  "Listening to music",
];

const favoriteBooks = [
  "Shrimad Bhagavad Gita",
  "12 Rules for Life by Jordan B. Peterson",
  "Ikigai by Héctor García and Francesc Miralles",
];

const favoriteMusic = [
  "90s and 2000s nostalgic jams",
  "Electronic beats",
  "Artists: Pixies, MGMT, Daft Punk, Oliver Heldens",
];
---

<Layout title="About - Utsav Balar">
  <main class="container mx-auto max-w-6xl px-4 py-8 sm:px-6 lg:px-8">
    <div class="terminal-card animate-fade-in">
      <header class="mb-8">
        <h1 class="mb-4 text-xl font-bold" style="color: var(--text-primary);">About</h1>
      </header>

      <!-- Education Section -->
      <section class="mb-10">
        <h2 class="section-title">
          <span class="prompt-symbol">$</span> Education
        </h2>
        <div class="education-grid">
          {
            education.map((edu) => (
              <div class:list={`education-card ${edu.current ? "current" : ""}`}>
                <div class="edu-header">
                  <h3 class="edu-degree">{edu.degree}</h3>
                  {edu.current && <span class="current-badge">Current</span>}
                </div>
                <p class="edu-institution">{edu.institution}</p>
                <div class="edu-meta">
                  <span class="edu-location">{edu.location}</span>
                  <span class="edu-period">{edu.period}</span>
                </div>
              </div>
            ))
          }
        </div>
      </section>

      <!-- Interests Section -->
      <section class="mb-10">
        <h2 class="section-title">
          <span class="prompt-symbol">&gt;</span> Interests
        </h2>
        <div class="interests-grid">
          {
            interests.map((interest) => (
              <div class="interest-item">
                <span class="interest-marker">▸</span>
                <span>{interest}</span>
              </div>
            ))
          }
        </div>
      </section>

      <!-- Favorites Section -->
      <section class="mb-10">
        <h2 class="section-title">
          <span class="prompt-symbol">#</span> Favorites
        </h2>

        <div class="favorites-container">
          <!-- Books -->
          <div class="favorite-category">
            <h3 class="category-title">Books</h3>
            <ul class="favorite-list">
              {
                favoriteBooks.map((book) => (
                  <li class="favorite-item">
                    <span class="list-marker">•</span>
                    {book}
                  </li>
                ))
              }
            </ul>
          </div>

          <!-- Music -->
          <div class="favorite-category">
            <h3 class="category-title">Music</h3>
            <ul class="favorite-list">
              {
                favoriteMusic.map((music) => (
                  <li class="favorite-item">
                    <span class="list-marker">•</span>
                    {music}
                  </li>
                ))
              }
            </ul>
          </div>
        </div>
      </section>

      <!-- Languages Section -->
      <section class="mb-10">
        <h2 class="section-title">
          <span class="prompt-symbol">$</span> Languages
        </h2>
        <div class="terminal-command">
          <span class="command-prompt">$</span>
          <span class="command-text">locale -a | grep fluent</span>
        </div>
        <div class="command-output">
          <div class="locale-line">
            <span class="locale-code">en_IN.UTF-8</span>
            <span class="locale-comment"># English (Fluent)</span>
          </div>
          <div class="locale-line">
            <span class="locale-code">hi_IN.UTF-8</span>
            <span class="locale-comment"># Hindi (Fluent)</span>
          </div>
          <div class="locale-line">
            <span class="locale-code">gu_IN.UTF-8</span>
            <span class="locale-comment"># Gujarati (Native)</span>
          </div>
        </div>
      </section>

      <!-- Links Section -->
      <section>
        <h2 class="section-title">
          <span class="prompt-symbol">@</span> Links
        </h2>
        <div class="links-container">
          <a
            href="https://open.spotify.com/user/21xsxpeenbk6f6cedao77vxpy?si=FxTIw4ZJReGwU1Mb_8NU6w"
            target="_blank"
            rel="noopener noreferrer"
            class="external-link"
          >
            <span>Spotify Profile</span>
            <span class="link-arrow">→</span>
          </a>
        </div>
      </section>
    </div>
  </main>
</Layout>

<style>
  .terminal-card {
    @apply p-6 sm:p-8;
    animation: fadeIn 0.8s ease-in;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .terminal-prompt {
    color: var(--accent-primary);
  }

  .terminal-prompt::after {
    content: "~$";
    @apply ml-1;
    color: var(--text-secondary);
  }

  .section-title {
    @apply mb-4 text-lg font-bold;
    color: var(--text-primary);
    font-family: "AdwaitaMono", monospace;
  }

  .prompt-symbol {
    color: var(--accent-primary);
  }

  /* Education Styles */
  .education-grid {
    @apply space-y-4;
  }

  .education-card {
    @apply mb-3 p-4;
    border-left: 2px solid var(--border-color);
  }

  .education-card.current {
    border-left: 3px solid var(--accent-primary);
  }

  .edu-header {
    @apply mb-2 flex items-start justify-between;
  }

  .edu-degree {
    @apply text-lg font-semibold;
    color: var(--text-primary);
  }

  .current-badge {
    @apply rounded px-2 py-1 text-xs;
    background-color: var(--accent-primary);
    color: var(--bg-primary);
  }

  .edu-institution {
    @apply mb-2 text-sm;
    color: var(--text-secondary);
  }

  .edu-meta {
    @apply flex justify-between text-xs;
    color: var(--text-secondary);
  }

  /* Interests Styles */
  .interests-grid {
    @apply grid gap-3;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  }

  .interest-item {
    @apply flex items-center gap-2 py-1;
    color: var(--text-primary);
  }

  .interest-marker {
    color: var(--accent-primary);
  }

  /* Favorites Styles */
  .favorites-container {
    @apply grid gap-6;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }

  .favorite-category {
    @apply mb-4;
  }

  .category-title {
    @apply mb-3 flex items-center gap-2 text-lg font-semibold;
    color: var(--text-primary);
  }

  .favorite-list {
    @apply space-y-2;
  }

  .favorite-item {
    @apply flex items-start gap-2 text-sm;
    color: var(--text-secondary);
  }

  .list-marker {
    color: var(--accent-primary);
    @apply mt-1;
  }

  /* Languages Styles */
  .terminal-command {
    @apply mb-2 flex items-center gap-2;
    font-family: "AdwaitaMono", monospace;
  }

  .command-prompt {
    color: var(--accent-primary);
    font-weight: bold;
  }

  .command-text {
    color: var(--text-primary);
  }

  .command-output {
    @apply mb-4 ml-6;
    padding: 0.5rem 0;
  }

  .locale-line {
    @apply mb-1 flex gap-4;
    font-family: "AdwaitaMono", monospace;
  }

  .locale-code {
    color: var(--text-primary);
    min-width: 150px;
  }

  .locale-comment {
    color: var(--text-secondary);
    opacity: 0.7;
  }

  /* Links Styles */
  .links-container {
    @apply flex flex-wrap gap-4;
  }

  .external-link {
    @apply inline-flex items-center gap-2;
    color: var(--accent-primary);
    text-decoration: underline;
    transition: opacity 0.2s ease;
  }

  .external-link:hover {
    opacity: 0.8;
  }

  .link-arrow {
    @apply ml-auto;
    color: var(--accent-primary);
  }

  /* Mobile responsiveness */
  @media (max-width: 640px) {
    .section-title {
      @apply text-lg;
    }

    .interests-grid {
      grid-template-columns: 1fr;
    }

    .favorites-container {
      grid-template-columns: 1fr;
    }
  }
</style>
