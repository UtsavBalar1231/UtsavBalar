---
import Layout from "../layouts/Layout.astro";

import Profile from "../components/Profile.astro";
import Contact from "../components/Contact.astro";

import ContentLink from "../components/ContentLink.astro";
import ContentCode from "../components/ContentAbout.astro";
import ContentProjects from "../components/ContentProjects.astro";
---

<Layout>
  <!-- Start: Main Wrapper -->
  <main
    class="flex flex-col md:flex-row w-full max-w-full md:max-w-7xl border border-gray-600 rounded-2xl overflow-hidden shadow-2xl relative bg-black mb-12 md:mb-4"
  >
    <!-- Start: Left / upper card -->
    <div
      class="p-8 md:p-6 flex flex-col justify-between w-full md:w-2/5 border-b md:border-b-0 md:border-r border-gray-600"
    >
      <Profile />

      <Contact />
    </div>
    <!-- End: Left / upper card -->

    <!-- Start: Right / lower card (yes 4/5 instead of 3/5) -->
    <div class="w-full md:w-4/5 p-0">
      <!-- Start: Inner wrapper -->
      <div
        class="min-h-full h-[90vh] flex flex-col overflow-y-scroll no-scrollbar"
      >
        <!-- Use hidden radio buttons to control the tabs -->
        <div class="tab-controls">
          <input type="radio" id="tab1" name="tabs" class="tab-radio" checked />

          <input type="radio" id="tab2" name="tabs" class="tab-radio" />

          <!-- Start: Tab bar -->
          <div class="flex bg-black border-b border-gray-600 sticky top-0 z-10">
            <ContentLink contentId="tab1" contentName="profile.mdx" />

            <ContentLink contentId="tab2" contentName="projects.mdx" />
          </div>
          <!-- End: Tab bar -->

          <!-- Start: Tab content -->
          <div class="p-6 flex-grow overflow-y-auto bg-black no-scrollbar tab-content-container">
            <!-- Start: About content -->
            <div id="content1" class="tab-content">
              <ContentCode />
            </div>
            <!-- End: About content -->

            <!-- Start: Projects content -->
            <div id="content2" class="tab-content">
              <ContentProjects />
            </div>
            <!-- End: Projects content -->
          </div>
          <!-- End: Tab content -->
        </div>
      </div>
      <!-- End: Inner wrapper -->
    </div>
    <!-- End: Right / lower card -->
  </main>
  <!-- End: Main Wrapper -->

  <!-- Credits -->
  <div
    class="fixed md:absolute bottom-0 left-0 right-0 w-full bg-black py-2 flex justify-between items-center px-4"
  >
    <div class="text-center mx-auto">
      Built with <a
        href="https://astro.build"
        title="Astro"
        target="_blank"
        class="text-primary hover:underline">Astro</a
      > by <a
        href="https://github.com/UtsavBalar1231"
        target="_blank"
        title="Utsav Balar"
        class="text-primary hover:underline">Utsav Balar</a
      >
    </div>
    
    <!-- Help Icon -->
    <button 
      id="vim-help-toggle" 
      class="w-8 h-8 flex items-center justify-center rounded-full hover:-translate-y-0.5 transition-all duration-150 help-icon ml-2"
      title="Vim Keybindings Help (press ? key)"
    >
      <svg 
        xmlns="http://www.w3.org/2000/svg" 
        width="16" 
        height="16" 
        viewBox="0 0 24 24" 
        fill="none" 
        stroke="currentColor" 
        stroke-width="2" 
        stroke-linecap="round" 
        stroke-linejoin="round" 
        class="text-primary"
      >
        <circle cx="12" cy="12" r="10"></circle>
        <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
        <line x1="12" y1="17" x2="12.01" y2="17"></line>
      </svg>
    </button>
  </div>
  
  <!-- Vim Keybindings Help -->
  <div id="vim-help-panel" class="fixed right-4 bottom-12 bg-black border border-gray-600 p-4 rounded-lg shadow-lg text-sm z-20 hidden">
    <h3 class="text-primary font-bold mb-2">Vim Keybindings</h3>
    <ul class="text-xs space-y-1">
      <li><span class="text-primary">j/k</span> - Scroll down/up</li>
      <li><span class="text-primary">gg</span> - Scroll to top</li>
      <li><span class="text-primary">G</span> - Scroll to bottom</li>
      <li><span class="text-primary">Ctrl+d/u</span> - Half page down/up</li>
      <li><span class="text-primary">gt</span> - Next tab</li>
      <li><span class="text-primary">gT</span> - Previous tab</li>
      <li><span class="text-primary">?</span> - Toggle this help</li>
      <li><span class="text-primary">Esc</span> - Close this help</li>
    </ul>
    <button id="vim-help-close" class="absolute top-1 right-2 text-gray-400 hover:text-primary">Ã—</button>
  </div>
</Layout>

<script>
  // Enhance smooth scrolling for tab transitions
  document.addEventListener('DOMContentLoaded', () => {
    const tabRadios = document.querySelectorAll('.tab-radio');
    const tabContentContainer = document.querySelector('.tab-content-container');
    
    // Reset scroll position when switching tabs
    tabRadios.forEach(radio => {
      radio.addEventListener('change', () => {
        if (tabContentContainer) {
          // Smoothly scroll to top when switching tabs
          tabContentContainer.scrollTo({
            top: 0,
            behavior: 'smooth'
          });
        }
      });
    });
    
    // Setup Vim help panel toggle
    const helpToggle = document.getElementById('vim-help-toggle');
    const helpPanel = document.getElementById('vim-help-panel');
    const helpClose = document.getElementById('vim-help-close');
    
    if (helpToggle && helpPanel && helpClose) {
      helpToggle.addEventListener('click', () => {
        helpPanel.classList.toggle('hidden');
      });
      
      helpClose.addEventListener('click', () => {
        helpPanel.classList.add('hidden');
      });
      
      // Also toggle help with ? key (Vim style)
      document.addEventListener('keydown', (e) => {
        if (e.key === '?') {
          e.preventDefault();
          helpPanel.classList.toggle('hidden');
        }
        
        // Close with Escape key
        if (e.key === 'Escape' && !helpPanel.classList.contains('hidden')) {
          helpPanel.classList.add('hidden');
        }
      });
    }
  });
</script>

<style is:global>
  /* Hide the radio buttons */
  .tab-radio {
    @apply absolute opacity-0 pointer-events-none;
  }

  /* Default state - hide all tab content */
  .tab-content {
    @apply hidden opacity-0;
    transition: opacity 0.3s ease-in-out;
  }

  /* Default state for tab links */
  .tab-link {
    @apply border-b-2 border-transparent bg-transparent;
    transition: background-color 0.2s ease-in-out;
  }

  /* When tab1 is checked, show content1 and highlight its tab */
  #tab1:checked ~ * #content1 {
    @apply block opacity-100;
  }

  #tab1:checked ~ .flex .tab-link:nth-child(1) {
    @apply border-b-2 border-b-primary;
  }

  /* When tab2 is checked, show content2 and highlight its tab */
  #tab2:checked ~ * #content2 {
    @apply block opacity-100;
  }

  #tab2:checked ~ .flex .tab-link:nth-child(2) {
    @apply border-b-2 border-b-primary;
  }

  /* Hide scrollbar but allow scrolling */
  .no-scrollbar {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
    overscroll-behavior: none; /* Disable overscroll/bounce effect */
    scroll-behavior: smooth; /* Enable smooth scrolling */
    
    /* Add scroll momentum and physics feel */
    -webkit-overflow-scrolling: touch; /* For iOS devices */
  }

  .no-scrollbar::-webkit-scrollbar {
    display: none; /* Chrome, Safari, Opera */
  }
  
  /* Handle all scrollable areas that aren't using the no-scrollbar class */
  [class*="overflow-"]:not(.no-scrollbar) {
    overscroll-behavior: none;
    scroll-behavior: smooth; /* Enable smooth scrolling */
    -webkit-overflow-scrolling: touch; /* For iOS devices */
  }
</style>

<style>
  .help-icon {
    opacity: 0.7;
    transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;
  }
  
  .help-icon:hover {
    opacity: 1;
    color: var(--accent-primary);
  }
  
  /* Responsive positioning for the help panel */
  @media (max-width: 768px) {
    #vim-help-panel {
      bottom: 40px; /* Position the panel above the credits bar */
      right: 4px;
      max-width: calc(100vw - 32px); /* Prevent overflow */
    }
  }
</style>
