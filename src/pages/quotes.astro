---
import Layout from "../layouts/Layout.astro";
import QuoteCard from "../components/QuoteCard.astro";
import Footer from "../components/Footer.astro";
import { getMdxQuotes } from "../data/mdxQuotesParser";

const quotes = await getMdxQuotes();

// Shuffle quotes for variety on each page load
const shuffledQuotes = [...quotes].sort(() => Math.random() - 0.5);

// Group quotes for display
const featuredQuotes = shuffledQuotes.slice(0, 3);
const remainingQuotes = shuffledQuotes.slice(3);
---

<Layout title="Quotes">
  <main class="container mx-auto px-2 py-4 sm:px-4 sm:py-6 md:max-w-6xl md:py-8 lg:px-8">
    <div class="terminal-card">
      <header class="mb-8">
        <h1 class="mb-4 text-xl font-bold font-ui-heading" style="color: var(--text-primary);">
          <span class="prompt font-ui-prompt">$</span> Quotes
        </h1>
        <p class="text-sm font-content" style="color: var(--text-secondary);">
          A collection of quotes that inspire, provoke thought, and challenge perspectives.
        </p>
      </header>

      <section class="mb-10">
        <h2 class="section-title font-ui-heading">
          <span class="prompt font-ui-prompt">&gt;</span> Featured Wisdom
        </h2>
        <div class="quotes-grid featured">
          {featuredQuotes.map((quote) => <QuoteCard {...quote} featured={true} />)}
        </div>
      </section>

      {
        remainingQuotes.length > 0 && (
          <section>
            <h2 class="section-title font-ui-heading">
              <span class="prompt font-ui-prompt">#</span> More Quotes
            </h2>
            <div class="quotes-grid">
              {remainingQuotes.map((quote) => (
                <QuoteCard {...quote} />
              ))}
            </div>
          </section>
        )
      }

      {
        quotes.length === 0 && (
          <div class="empty-state">
            <p>No quotes available yet. Check back soon!</p>
          </div>
        )
      }
    </div>
  </main>
  <Footer />
</Layout>

<style>
  .terminal-card {
    @apply animate-fade-in p-6 sm:p-8;
  }

  .prompt {
    color: var(--accent-primary);
    @apply mr-2;
  }

  .section-title {
    @apply mb-4 text-lg font-bold;
    color: var(--text-primary);
    font-family: "DepartureMono", monospace;
  }

  .quotes-grid {
    @apply grid gap-4;
    grid-template-columns: 1fr;
  }

  .quotes-grid.featured {
    @apply mb-6;
  }

  @media (min-width: 768px) {
    .quotes-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1280px) {
    .quotes-grid {
      grid-template-columns: repeat(3, 1fr);
    }

    .quotes-grid.featured {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .empty-state {
    @apply py-12 text-center;
    color: var(--text-secondary);
    font-family: monospace;
  }
</style>
