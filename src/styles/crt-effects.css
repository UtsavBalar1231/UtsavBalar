/* CRT Effects - Complex terminal visual effects */

/* Mobile-first approach - Disable all heavy effects on mobile for performance */
@media (max-width: 767px) {
  /* Kill all CRT effects on mobile */
  .crt-screen::before,
  .crt-screen::after,
  .noise-overlay,
  .crt-static,
  body::before {
    display: none !important;
  }

  /* Disable matrix background animation */
  .matrix-bg {
    animation: none !important;
    opacity: 0 !important;
  }

  /* Set performance mode to maximum */
  :root {
    --crt-intensity: 0 !important;
  }
}

/* Prefers Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
  /* Disable all animations for users who prefer reduced motion */
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }

  /* Hide complex CRT effects */
  .crt-screen::before,
  .crt-screen::after,
  .noise-overlay,
  .crt-static,
  body::before {
    display: none !important;
  }

  /* Keep simple matrix background but static */
  .matrix-bg {
    animation: none !important;
  }
}

/* Performance Mode - Use CSS custom property to control intensity */
:root {
  --crt-intensity: 1; /* 0 = off, 0.5 = reduced, 1 = full */
  --noise-speed: 0.3s; /* Speed of noise animation */
}

/* Minimal scanline overlay */
body::before {
  content: "";
  @apply pointer-events-none fixed left-0 top-0 z-[2] h-full w-full;
  opacity: calc(0.15 * var(--crt-intensity, 1));
  background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.02) 50%);
  background-size: 100% 4px;
  animation: scanlines 8s linear infinite;
  /* Viewport containment */
  max-width: 100%;
  max-height: 100%;
  overflow: hidden;
  contain: strict;
  clip-path: inset(0);
}

/* Matrix background */
.matrix-bg {
  @apply pointer-events-none fixed left-0 top-0 -z-10 h-full w-full bg-matrix-rain opacity-5;
}

/* Enhanced CRT screen effects - ULTRA MODE */
@layer utilities {
  /* Master CRT container */
  .crt-screen {
    position: relative;
  }

  /* Vignette effect for CRT curvature simulation */
  .crt-screen::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(
      ellipse at center,
      transparent 0%,
      transparent 65%,
      rgba(0, 0, 0, 0.4) 100%
    );
    pointer-events: none;
    z-index: 4;
    opacity: var(--crt-intensity, 1);
    /* Viewport containment */
    overflow: hidden;
    contain: strict;
    clip-path: inset(0);
    isolation: isolate;
  }

  /* Subtle phosphor glow effect */
  .crt-screen::after {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    z-index: 1;
    opacity: calc(0.1 * var(--crt-intensity, 1));
    background: repeating-linear-gradient(
      0deg,
      transparent,
      transparent 7px,
      rgba(0, 255, 0, 0.01) 25px,
      rgba(0, 255, 0, 0.01) 40px
    );
    animation: phosphor-flicker 10s ease-in-out infinite;
    /* Viewport containment */
    overflow: hidden;
    contain: strict;
    clip-path: inset(0);
    isolation: isolate;
  }

  /* Noise overlay - Subtle animated texture */
  .noise-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
    pointer-events: none;
    z-index: 3;
    /* Viewport containment */
    overflow: hidden;
    contain: strict;
    clip-path: inset(0);
    isolation: isolate;
    /* Noise texture matching richardapps implementation */
    background: url("/noise-textures/noisy-texture-200x200-1.png");
    background-repeat: repeat;
    background-size: 200px 200px;
    background-blend-mode: multiply;
    filter: contrast(1.5) brightness(0.5) hue-rotate(90deg);
    opacity: calc(0.65 * var(--crt-intensity, 1));
    /* Radial mask for edge fading */
    mask-image: radial-gradient(circle, rgba(0, 0, 0, 1) 30%, rgba(0, 0, 0, 0) 150%);
    mask-size: cover;
    mask-position: center;
    /* Animation */
    animation: noise-cycle var(--noise-speed, 0.3s) steps(4) infinite;
  }

  /* Light static interference using noise */
  .crt-static {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    opacity: calc(0.02 * var(--crt-intensity, 1));
    z-index: 1;
    /* Enhanced viewport containment */
    overflow: hidden;
    contain: strict;
    clip-path: inset(0);
    isolation: isolate;
    /* GPU acceleration */
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    /* Use noise texture for static */
    background-image: url("/noise-textures/noise-2.png");
    background-repeat: repeat;
    background-size: 100px 100px;
    filter: contrast(2) brightness(0.5);
    animation: interference 5s linear infinite;
  }

  /* Voltage Fluctuation Effect - Desktop only */
  @media (hover: hover) and (min-width: 768px) {
    body {
      animation: voltage-flicker 20s ease-in-out infinite;
    }
  }

  /* Pixel Grid Overlay */
  .matrix-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
    pointer-events: none;
    opacity: 0.03;
    z-index: 0;
    /* Viewport containment */
    overflow: hidden;
    contain: strict;
    clip-path: inset(0);
    isolation: isolate;
    /* GPU acceleration */
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    background-image:
      repeating-linear-gradient(
        0deg,
        transparent,
        transparent 1px,
        rgba(0, 255, 0, 0.05) 1px,
        rgba(0, 255, 0, 0.05) 2px
      ),
      repeating-linear-gradient(
        90deg,
        transparent,
        transparent 1px,
        rgba(0, 255, 0, 0.05) 1px,
        rgba(0, 255, 0, 0.05) 2px
      );
    background-size: 2px 2px;
    animation: pixel-drift 60s linear infinite;
  }

  /* Pause animations when tab is not visible for battery saving */
  @media not all and (prefers-reduced-motion: reduce) {
    .crt-screen[data-paused="true"]::before,
    .crt-screen[data-paused="true"]::after,
    .noise-overlay[data-paused="true"],
    .crt-static[data-paused="true"],
    .matrix-bg[data-paused="true"] {
      animation-play-state: paused !important;
    }
  }
}
