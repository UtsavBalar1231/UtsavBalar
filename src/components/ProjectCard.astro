---
export interface Props {
  title: string;
  description: string;
  tags: string[];
  githubUrl?: string;
  demoUrl?: string;
  featured?: boolean;
}

const { title, description, tags, githubUrl, demoUrl, featured = false } = Astro.props;

// Categorize tags and assign colors with matching glow
function getTagColorAndGlow(tag: string): string {
  const lowerTag = tag.toLowerCase();

  // Programming languages - bright green
  if (
    ["c", "rust", "python", "javascript", "typescript", "c++", "java", "go", "ruby", "swift"].some(
      (lang) => lowerTag.includes(lang)
    )
  ) {
    return "text-term-bright-green border-term-bright-green hover:glow-bright-green";
  }

  // Frameworks & Libraries - bright cyan
  if (
    ["react", "vue", "angular", "next", "astro", "svelte", "django", "flask", "express", "qt"].some(
      (fw) => lowerTag.includes(fw)
    )
  ) {
    return "text-term-bright-cyan border-term-bright-cyan hover:glow-bright-cyan";
  }

  // System/Low-level - bright red
  if (
    ["kernel", "driver", "embedded", "linux", "aosp", "rom", "bsp", "bootloader"].some((sys) =>
      lowerTag.includes(sys)
    )
  ) {
    return "text-term-bright-red border-term-bright-red hover:glow-bright-red";
  }

  // Tools & DevOps - bright magenta
  if (
    ["docker", "kubernetes", "git", "ci/cd", "jenkins", "qemu", "yocto", "buildroot"].some((tool) =>
      lowerTag.includes(tool)
    )
  ) {
    return "text-term-bright-magenta border-term-bright-magenta hover:glow-bright-magenta";
  }

  // Databases - bright yellow
  if (
    ["mongodb", "postgres", "mysql", "redis", "sqlite", "database", "sql"].some((db) =>
      lowerTag.includes(db)
    )
  ) {
    return "text-term-bright-yellow border-term-bright-yellow hover:glow-bright-yellow";
  }

  // Default - bright blue
  return "text-term-bright-blue border-term-bright-blue hover:glow-bright-blue";
}
---

<div
  class:list={[
    "mb-6 border border-terminal bg-terminal-secondary p-4 transition-all duration-300 hover:border-primary hover:shadow-[0_0_8px_rgba(var(--border-color-rgb),0.2)] max-sm:p-3",
    { "border-l-[3px] border-l-primary": featured },
  ]}
>
  <div class="mb-3 flex items-start justify-between">
    <h3 class="font-mono text-lg font-bold text-terminal max-sm:text-base">
      <span class="mr-2 text-primary">&gt;</span>
      {title}
    </h3>
    {featured && <span class="bg-primary px-2 py-1 font-mono text-xs text-black">Featured</span>}
  </div>

  <p class="mb-4 text-sm leading-relaxed text-terminal-secondary">{description}</p>

  <div class="mb-4 flex flex-wrap gap-2">
    {
      tags.map((tag) => (
        <span
          class:list={`border px-2 py-1 font-mono text-xs transition-all duration-200 hover:scale-105 ${getTagColorAndGlow(tag)}`}
        >
          {tag}
        </span>
      ))
    }
  </div>

  <div class="flex gap-4">
    {
      githubUrl && (
        <a
          href={githubUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="glitch-subtle-hover font-mono text-sm text-term-bright-green no-underline transition-all duration-200 hover:text-term-bright-cyan hover:underline hover:glow-bright-cyan"
        >
          <span class="text-term-bright-black">[</span>
          GitHub
          <span class="text-term-bright-black">]</span>
        </a>
      )
    }
    {
      demoUrl && (
        <a
          href={demoUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="glitch-subtle-hover font-mono text-sm text-term-bright-magenta no-underline transition-all duration-200 hover:text-term-bright-cyan hover:underline hover:glow-bright-cyan"
        >
          <span class="text-term-bright-black">[</span>
          Demo
          <span class="text-term-bright-black">]</span>
        </a>
      )
    }
  </div>
</div>
