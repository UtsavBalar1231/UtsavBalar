---
export interface Props {
  number: number;
  title: string;
  description: string;
  difficulty: string;
  duration: string;
  tags: string[];
  url: string;
}

const { number, title, description, difficulty, duration, tags, url } = Astro.props;

const displayDifficulty = difficulty.charAt(0).toUpperCase() + difficulty.slice(1);

const difficultyColors: Record<string, string> = {
  beginner: "beginner",
  intermediate: "intermediate",
  advanced: "advanced",
  professional: "professional",
};
---

<a href={url} class="tutorial-card-link">
  <div class="tutorial-card glitch-border-hover">
    <div class="tutorial-header">
      <span class="tutorial-number">#{number.toString().padStart(2, "0")}</span>
      <span class:list={`difficulty-badge ${difficultyColors[difficulty]}`}>
        {displayDifficulty}
      </span>
    </div>

    <h3 class="tutorial-title">{title}</h3>

    <p class="tutorial-description">{description}</p>

    <div class="tutorial-meta">
      <div class="tutorial-duration">
        <span class="meta-label">Duration:</span>
        <span class="meta-value">{duration}</span>
      </div>
    </div>

    <div class="tutorial-tags">
      {tags.map((tag) => <span class="tag">{tag}</span>)}
    </div>

    <div class="tutorial-action">
      <span class="action-text">Read Tutorial</span>
      <span class="action-arrow">â†’</span>
    </div>
  </div>
</a>

<style>
  .tutorial-card-link {
    text-decoration: none;
    display: block;
  }

  .tutorial-card {
    @apply p-4;
    border: 1px solid rgba(var(--border-color-rgb), 0.5);
    background: rgba(var(--bg-color-rgb), 0.05);
    backdrop-filter: blur(8px) saturate(1.1);
    -webkit-backdrop-filter: blur(8px) saturate(1.1);
    transition: all 0.3s ease;
    cursor: pointer;
    box-shadow:
      0 2px 6px rgba(0, 0, 0, 0.04),
      inset 0 1px 0 rgba(255, 255, 255, 0.02);
  }

  .tutorial-card:hover {
    border-color: var(--accent-primary);
    background: rgba(var(--bg-color-rgb), 0.08);
    backdrop-filter: blur(10px) saturate(1.2);
    -webkit-backdrop-filter: blur(10px) saturate(1.2);
    box-shadow:
      0 0 10px rgba(var(--accent-primary-rgb), 0.3),
      0 4px 12px rgba(0, 0, 0, 0.06),
      inset 0 1px 0 rgba(255, 255, 255, 0.04);
    transform: translateY(-2px);
  }

  .tutorial-header {
    @apply mb-3 flex items-center justify-between;
  }

  .tutorial-number {
    @apply text-lg font-bold;
    color: var(--accent-primary);
    font-family: DepartureMono, monospace;
    text-transform: uppercase;
    letter-spacing: 0.1em;
  }

  .difficulty-badge {
    @apply px-2 py-1 text-xs;
    font-family: DepartureMono, monospace;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border: 1px solid;
    font-weight: 600;
  }

  .difficulty-badge.beginner {
    border-color: var(--success);
    color: var(--success);
  }

  .difficulty-badge.intermediate {
    border-color: var(--warning);
    color: var(--warning);
  }

  .difficulty-badge.advanced {
    border-color: var(--error);
    color: var(--error);
  }

  .difficulty-badge.professional {
    border-color: var(--accent-primary);
    color: var(--accent-primary);
  }

  .tutorial-title {
    @apply mb-2 text-base font-bold;
    color: var(--text-primary);
    font-family: DepartureMono, monospace;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    line-height: 1.4;
  }

  .tutorial-description {
    @apply mb-3 text-sm;
    color: var(--text-secondary);
    line-height: 1.5;
  }

  .tutorial-meta {
    @apply mb-3 flex gap-4 text-xs;
    color: var(--text-secondary);
    font-family: monospace;
  }

  .meta-label {
    opacity: 0.7;
    font-family: DepartureMono, monospace;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .meta-value {
    color: var(--text-primary);
    font-family: monospace;
  }

  .tutorial-tags {
    @apply mb-3 flex flex-wrap gap-2;
  }

  .tag {
    @apply px-2 py-1 text-xs;
    background: rgba(var(--bg-color-rgb), 0.06);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    border: 1px solid;
    font-family: DepartureMono, monospace;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: all 0.2s ease;
    box-shadow:
      0 1px 3px rgba(0, 0, 0, 0.02),
      inset 0 1px 0 rgba(255, 255, 255, 0.01);
  }

  .tag:nth-child(4n + 1) {
    color: var(--term-bright-green);
    border-color: var(--term-bright-green);
  }

  .tag:nth-child(4n + 2) {
    color: var(--term-bright-cyan);
    border-color: var(--term-bright-cyan);
  }

  .tag:nth-child(4n + 3) {
    color: var(--term-bright-yellow);
    border-color: var(--term-bright-yellow);
  }

  .tag:nth-child(4n) {
    color: var(--term-bright-magenta);
    border-color: var(--term-bright-magenta);
  }

  .tag:hover {
    opacity: 0.8;
    transform: translateY(-1px);
  }

  .tutorial-action {
    @apply flex items-center justify-between pt-3;
    border-top: 1px solid var(--border-color);
    color: var(--accent-primary);
    font-family: DepartureMono, monospace;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .action-arrow {
    transition: transform 0.2s ease;
  }

  .tutorial-card:hover .action-arrow {
    transform: translateX(4px);
  }

  @media (max-width: 640px) {
    .tutorial-card {
      @apply p-3;
    }

    .tutorial-title {
      @apply text-sm;
    }

    .tutorial-description {
      @apply text-xs;
    }

    .tutorial-number {
      @apply text-base;
    }
  }

  @media (max-width: 375px) {
    .tutorial-card {
      @apply p-2;
    }

    .tutorial-title {
      font-size: 0.8rem;
    }

    .tutorial-description {
      font-size: 0.7rem;
    }

    .tutorial-number {
      @apply text-sm;
    }

    .difficulty-badge {
      font-size: 0.6rem;
      @apply px-1;
    }

    .tag {
      font-size: 0.6rem;
      @apply px-1;
    }

    .tutorial-action {
      font-size: 0.75rem;
    }
  }
</style>
