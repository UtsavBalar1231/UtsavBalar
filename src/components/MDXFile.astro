---
// MDXFile.astro - Component for importing and rendering .mdx files inline
import fs from "node:fs/promises";
import path from "node:path";
import { fileURLToPath } from "node:url";

interface Props {
  filePath: string; // Path to the .mdx file relative to the src directory
  class?: string;
}

const { filePath, class: className = "" } = Astro.props;

// Get the absolute path to the src directory
const __dirname = path.dirname(fileURLToPath(import.meta.url));
const srcDir = path.resolve(__dirname, "..");

// Resolve the full path to the MDX file
const fullPath = path.resolve(srcDir, filePath);

// Try to read the file content
let Content;
try {
  // Dynamic import of the MDX file
  Content = await import(fullPath);
} catch (error) {
  console.error(`Error importing MDX file ${filePath}:`, error);
}
---

{
  Content ? (
    <div class={`mdx-file ${className}`}>
      <Content.default />
    </div>
  ) : (
    <div class="mdx-error">
      <p>Error loading MDX file: {filePath}</p>
    </div>
  )
}

<style>
  .mdx-file {
    color: var(--text-primary);
    line-height: 1.6;
  }

  .mdx-error {
    color: #ff5555;
    font-style: italic;
    padding: 1rem;
    border-left: 3px solid #ff5555;
    background-color: rgba(255, 85, 85, 0.1);
  }
</style>
