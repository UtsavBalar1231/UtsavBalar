---
import "../styles/global.css";
import ThemeSelector from "../components/ThemeSelector.astro";
import MobileNav from "../components/MobileNav.astro";
import Nav from "../components/Nav.astro";
import SpinningCat from "../components/SpinningCat.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Utsav Balar's portfolio - Linux kernel developer, system programmer, and open source enthusiast"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="manifest" href="/manifest.json" />
    <meta name="theme-color" content="#dbbc7f" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <script is:inline>
      (function () {
        const stored = localStorage.getItem("selectedTheme");
        const theme = stored || "monochrome";

        document.documentElement.setAttribute("data-theme", theme);

        if (document.body) {
          document.body.setAttribute("data-theme", theme);
        }
      })();
    </script>

    <link rel="dns-prefetch" href="https://utsavbalar.in" />
    <link rel="preconnect" href="https://utsavbalar.in" />

    <!-- External resource hints for performance -->
    <link rel="dns-prefetch" href="https://api.github.com" />
    <link rel="dns-prefetch" href="https://cataas.com" />
    <link rel="preconnect" href="https://api.github.com" crossorigin />
    <link rel="preconnect" href="https://cataas.com" crossorigin />

    <link
      rel="preload"
      href="/fonts/DepartureMono/DepartureMonoNerdFontMono-Regular.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />

    <link rel="preload" href="/src/styles/theme.css" as="style" />
  </head>
  <body>
    <div
      class="fixed right-2 top-2 max-w-[calc(100vw-2rem)] max-md:max-w-[calc(100vw-1rem)] lg:right-4 lg:top-4"
    >
      <ThemeSelector />
    </div>
    <div class="noise-overlay" style="z-index: var(--z-noise);"></div>
    <div class="grunge-overlay" style="z-index: var(--z-grunge);"></div>
    <div class="matrix-bg" style="z-index: var(--z-background);"></div>
    <div
      class="pt-18 page-transition relative min-h-screen p-4 max-md:pb-20 sm:p-6 md:p-8"
      style="contain: layout style;"
      id="main-content"
    >
      <header class="mb-8">
        <Nav />
      </header>
      <slot />
    </div>
    <MobileNav />
    <SpinningCat />
  </body>
</html>

<script>
  function initPageTransitions() {
    const mainContent = document.getElementById("main-content");

    mainContent?.classList.add("page-content-enter");

    document.addEventListener("click", (e) => {
      const link = (e.target as HTMLElement)?.closest("a");
      if (link && link.href && link.href.startsWith(window.location.origin) && !link.target) {
        e.preventDefault();

        mainContent?.classList.add("page-transition-exit");

        mainContent?.classList.add("terminal-nav-transition");

        const delay = window.innerWidth < 768 ? 100 : 400;
        setTimeout(() => {
          window.location.href = link.href;
        }, delay);
      }
    });
  }

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initPageTransitions);
  } else {
    initPageTransitions();
  }

  // Alt+1-7 keyboard navigation
  document.addEventListener("keydown", (event) => {
    if (event.altKey) {
      let targetUrl = null;

      switch (event.key) {
        case "1":
          targetUrl = "/";
          break;
        case "2":
          targetUrl = "/about/";
          break;
        case "3":
          targetUrl = "/projects/";
          break;
        case "4":
          targetUrl = "/quotes/";
          break;
        case "5":
          targetUrl = "/bookbits/";
          break;
        case "6":
          targetUrl = "/resume/";
          break;
        case "7":
          targetUrl = "/tutorials/";
          break;
      }

      if (targetUrl) {
        const mainContent = document.getElementById("main-content");
        mainContent?.classList.add("page-transition-exit");
        mainContent?.classList.add("terminal-nav-transition");

        const delay = window.innerWidth < 768 ? 100 : 400;
        setTimeout(() => {
          window.location.href = targetUrl;
        }, delay);
      }
    }
  });

  // Register Service Worker for offline support
  if ("serviceWorker" in navigator) {
    window.addEventListener("load", () => {
      navigator.serviceWorker
        .register("/sw.js")
        .then(() => {
          // Service Worker registered successfully
        })
        .catch((error) => {
          console.error("Service Worker registration failed:", error);
        });
    });
  }

  // Lazy animations for desktop only
  document.addEventListener("DOMContentLoaded", () => {
    if (window.innerWidth >= 768) {
      const observerOptions = {
        threshold: 0.1,
        rootMargin: "50px",
      };

      const animationObserver = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("animate-in");
            animationObserver.unobserve(entry.target);
          }
        });
      }, observerOptions);

      document.querySelectorAll(".terminal-card, .content-section, .project-card").forEach((el) => {
        el.classList.add("animate-ready");
        animationObserver.observe(el);
      });
    }
  });
</script>

<style is:global>
  /* Z-index hierarchy:
     - Background effects: 0-9 (Overlay effects in crt-effects.css)
     - Main content: 10-19
     - Mobile nav: 30-39
     - Theme selector: 40-49
     - Dropdowns/modals: 50+ */

  /* Browser-level styles that can't be easily done with Tailwind */
  html {
    /* Prevent scroll chaining */
    overscroll-behavior-y: contain;
    overscroll-behavior-x: none;
  }

  body {
    /* Improve mobile touch handling */
    touch-action: pan-y;
    -webkit-overflow-scrolling: touch;
    /* Prevent scroll chaining */
    overscroll-behavior: contain;
    /* GPU acceleration */
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
  }
</style>
