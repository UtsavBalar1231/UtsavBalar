---
import "../styles/global.scss";

// Base domain URL without trailing slash
const domainBaseURL = "https://utsavbalar.in";
const ogImageUrl = "https://utsavbalar.in/img/meta.png";

// Website publisher & region
const authorPublisher = "Utsav Balar";
const geoRegion = "IN-GJ";

// SEO title, description and keywords
const seoTitle = "Utsav Balar | Embedded Linux & BSP Engineer";
const seoDescription =
  "Embedded Linux and BSP Engineer with expertise in Linux kernel development, device drivers, and custom ROM development for various hardware platforms.";
const seoKeywords =
  "Utsav Balar, Embedded Linux, BSP Engineer, Linux Kernel, Device Drivers, Custom ROM, Vicharak, Rockchip, Qualcomm";

// Twitter card data
const twitter = {
  title: seoTitle,
  description: seoDescription,
  image: ogImageUrl,
  site: "https://x.com/UtsavTheCunt",
  creator: "UtsavTheCunt",
};

// Open graph data
const openGraph = {
  title: seoTitle,
  description: seoDescription,
  url: domainBaseURL,
  image: ogImageUrl,
  type: "website",
  locale: "en_US",
  siteName: "Utsav Balar",
};

// Dublin core
const dublinCore = {
  title: "Utsav Balar",
  creator: authorPublisher,
  publisher: authorPublisher,
  rights: authorPublisher,
  description: seoDescription,
  language: "en",
  type: "Software",
  format: "text/html",
};

// Create an inline SVG favicon with theme-aware colors
const inlineFavicon = `
<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
  <rect width="32" height="32" fill="transparent" />
  <text x="16" y="21" fill="currentColor" font-family="AdwaitaMono, monospace" font-size="14" font-weight="bold" text-anchor="middle">UB</text>
</svg>
`;

// Convert SVG to data URL for use as favicon
const faviconDataUrl = `data:image/svg+xml;base64,${Buffer.from(inlineFavicon).toString("base64")}`;
---

<!doctype html>
<html lang="en" class="font-mono">
  <head>
    <!-- Preload AdwaitaMono fonts -->
    <link
      rel="preload"
      href="/fonts/AdwaitaMono/AdwaitaMonoNerdFontMono-Regular.ttf"
      as="font"
      type="font/ttf"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/AdwaitaMono/AdwaitaMonoNerdFontMono-Bold.ttf"
      as="font"
      type="font/ttf"
      crossorigin
    />

    <!-- Crawler & Robots -->
    <meta
      name="robots"
      content="index, follow, noodp, max-image-preview:large, max-snippet:-1, max-video-preview:-1"
    />
    <meta name="revisit-after" content="7 days" />
    <meta name="revisit" content="after 7 days" />

    <!-- Start: Meta-Tags -->
    <meta charset="UTF-8" />
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <meta http-equiv="Pragma" content="cache" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- End: Meta-Tags -->

    <!-- Start: DNS prefetch and preconnect -->
    <link rel="preload" as="image" href="/img/default-avatar.svg" />
    <link rel="preload" as="image" href="/img/logo.svg" />
    <!-- End: DNS prefetch and preconnect -->

    <!-- Start: Theming and Favicons -->
    <link
      rel="icon"
      type="image/svg+xml"
      href="/img/logo.svg"
      crossorigin="anonymous"
    />
    <!-- End: Theming and Favicons -->

    <!-- Start: Misc meta tags -->
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="canonical" href={Astro.url} />

    <meta name="geo.region" content={geoRegion} />
    <meta name="author" content={authorPublisher} />
    <meta name="publisher" content={authorPublisher} />
    <meta name="copyright" content={authorPublisher} />
    <!-- End: Misc meta tags -->

    <!-- Start: Facebook open graph -->
    <meta property="og:title" content={openGraph.title} />
    <meta property="og:description" content={openGraph.description} />
    <meta property="og:url" content={openGraph.url} />
    <meta property="og:type" content={openGraph.type} />
    <meta property="og:image" content={openGraph.image} />
    <meta property="og:locale" content={openGraph.locale} />
    <meta property="og:site_name" content={openGraph.siteName} />
    <!-- End: Facebook open graph -->

    <!-- Start: Twitter card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={twitter.title} />
    <meta name="twitter:description" content={twitter.description} />
    <meta name="twitter:image" content={twitter.image} />
    <meta name="twitter:site" content={twitter.site} />
    <meta name="twitter:creator" content={twitter.creator} />
    <!-- End: Twitter card -->

    <!-- Start: Dublin Core (DC) -->
    <meta name="DC.Title" content={dublinCore.title} />
    <meta name="DC.Creator" content={dublinCore.creator} />
    <meta name="DC.Rights" content={dublinCore.rights} />
    <meta name="DC.Publisher" content={dublinCore.publisher} />
    <meta name="DC.Description" content={dublinCore.description} />
    <meta name="DC.Language" content={dublinCore.language} />
    <meta name="DC.Type" content={dublinCore.type} />
    <meta name="DC.Format" content={dublinCore.format} />
    <!-- End: Dublin Core (DC) -->

    <!-- Title & Description -->
    <title>{seoTitle}</title>
    <meta name="description" content={seoDescription} />
    <meta name="abstract" content={seoDescription} />
    <meta name="keywords" content={seoKeywords} />

    <!-- Dynamic favicon styles -->
    <style is:inline>
      @media (prefers-color-scheme: dark) {
        :root {
          color-scheme: dark;
        }
      }

      @media (prefers-color-scheme: light) {
        :root {
          color-scheme: light;
        }
      }
    </style>

    <!-- Theme initialization script -->
    <script is:inline>
      // Check for saved theme preference or use default
      const getStoredTheme = () => localStorage.getItem("theme");
      const setTheme = (theme) => {
        document.documentElement.setAttribute("data-theme", theme);
        localStorage.setItem("theme", theme);
      };

      // Apply the theme on initial load
      const storedTheme = getStoredTheme();
      if (storedTheme) {
        setTheme(storedTheme);
      } else {
        // Default theme
        setTheme("default");
      }
    </script>
  </head>

  <body class="min-h-[100vh] flex items-center justify-center p-4">
    <slot />
  </body>
</html>
